#include "Characters.h"

static Character alphabet[] =
{
'a', {0x7c,0x44,0x44,0x7c,0x44},
'b', {0x7c,0x44,0x78,0x44,0x7c},
'c', {0x7c,0x40,0x40,0x40,0x7c},
'd', {0x78,0x44,0x44,0x44,0x78},
'e', {0x7c,0x40,0x78,0x40,0x7c},
'f', {0x7c,0x40,0x70,0x40,0x40},
'g', {0x7c,0x40,0x4c,0x44,0x7c},
'h', {0x44,0x44,0x7c,0x44,0x44},
'i', {0x7c,0x10,0x10,0x10,0x7c},
'j', {0x0c,0x04,0x04,0x44,0x7c},
'k', {0x44,0x48,0x70,0x48,0x44},
'l', {0x40,0x40,0x40,0x40,0x7c},
'm', {0x44,0x6c,0x54,0x44,0x44},
'n', {0x44,0x64,0x54,0x4c,0x44},
'o', {0x38,0x44,0x44,0x44,0x38},
'p', {0x78,0x44,0x78,0x40,0x40},
'q', {0x7c,0x44,0x44,0x7c,0x10},
'r', {0x78,0x44,0x78,0x44,0x44},
's', {0x7c,0x40,0x7c,0x04,0x7c},
't', {0x7c,0x10,0x10,0x10,0x10},
'u', {0x44,0x44,0x44,0x44,0x7c},
'v', {0x44,0x44,0x28,0x28,0x10},
'w', {0x44,0x44,0x54,0x54,0x28},
'x', {0x44,0x28,0x10,0x28,0x44},
'y', {0x44,0x44,0x28,0x10,0x10},
'z', {0x7c,0x08,0x10,0x20,0x7c},
  
// 'ze', {0x7c,0x4c,0x54,0x64,0x7c},
// 'on', {0x10,0x30,0x10,0x10,0x38},
// 'tw', {0x78,0x04,0x38,0x40,0x7c},
// 'th', {0x7c,0x04,0x38,0x04,0x7c},
// 'fo', {0x40,0x40,0x50,0x7c,0x10},
// 'fi', {0x7c,0x40,0x78,0x04,0x78},
// 'si', {0x7c,0x40,0x7c,0x44,0x7c},
// 'se', {0x7c,0x04,0x08,0x10,0x10},
// 'ei', {0x7c,0x44,0x7c,0x44,0x7c},
// 'ni', {0x7c,0x44,0x7c,0x04,0x7c},

  '0', { 0x2, 0x5, 0x5, 0x5, 0x2 },
  '1', { 0x2, 0x6, 0x2, 0x2, 0x7 },
  '2', { 0x6, 0x1, 0x2, 0x4, 0x7 },
  '3', { 0x6, 0x1, 0x2, 0x1, 0x6 },
  '4', { 0x1, 0x5, 0x7, 0x1, 0x1 },
  '5', { 0x7, 0x4, 0x6, 0x1, 0x6 },
  '6', { 0x3, 0x4, 0x6, 0x5, 0x2 },
  '7', { 0x7, 0x1, 0x2, 0x2, 0x2 },
  '8', { 0x2, 0x5, 0x2, 0x5, 0x2 },
  '9', { 0x2, 0x5, 0x3, 0x1, 0x6 },

  '\0',  {0, 0, 0, 0, 0} // terminate with null character
};


Character& getCharacter(char c){
  uint8_t pos = 0;
  Character& match = alphabet[pos];
  while(match.c != '\0'){
    if(match.c == c)
      return match;
    match = alphabet[++pos];
  }
  return match; // return '\0'
}




/* 
   10x8 pixels
   5x4 chars
 */
// class Character {
//  public:
//   char ch;
//   uint8_t[5]
// };

/* 
   from http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl?num=1234005825/13
 */

// static cgr _digits[] =
// {
//   '0', { 0x2, 0x5, 0x5, 0x5, 0x2 },
//   '1', { 0x2, 0x6, 0x2, 0x2, 0x7 },
//   '2', { 0x6, 0x1, 0x2, 0x4, 0x7 },
//   '3', { 0x6, 0x1, 0x2, 0x1, 0x6 },
//   '4', { 0x1, 0x5, 0x7, 0x1, 0x1 },
//   '5', { 0x7, 0x4, 0x6, 0x1, 0x6 },
//   '6', { 0x3, 0x4, 0x6, 0x5, 0x2 },
//   '7', { 0x7, 0x1, 0x2, 0x2, 0x2 },
//   '8', { 0x2, 0x5, 0x2, 0x5, 0x2 },
//   '9', { 0x2, 0x5, 0x3, 0x1, 0x6 }
// };

//   byte a[8]={0x00,0x7c,0x44,0x44,0x7c,0x44,0x00,0x00};
//   byte b[8]={0x00,0x7c,0x44,0x78,0x44,0x7c,0x00,0x00};
//   byte c[8]={0x00,0x7c,0x40,0x40,0x40,0x7c,0x00,0x00};
//   byte d[8]={0x00,0x78,0x44,0x44,0x44,0x78,0x00,0x00};
//   byte e[8]={0x00,0x7c,0x40,0x78,0x40,0x7c,0x00,0x00};
//   byte f[8]={0x00,0x7c,0x40,0x70,0x40,0x40,0x00,0x00};
//   byte g[8]={0x00,0x7c,0x40,0x4c,0x44,0x7c,0x00,0x00};
//   byte h[8]={0x00,0x44,0x44,0x7c,0x44,0x44,0x00,0x00};
//   byte i[8]={0x00,0x7c,0x10,0x10,0x10,0x7c,0x00,0x00};
//   byte j[8]={0x00,0x0c,0x04,0x04,0x44,0x7c,0x00,0x00};
//   byte k[8]={0x00,0x44,0x48,0x70,0x48,0x44,0x00,0x00};
//   byte l[8]={0x00,0x40,0x40,0x40,0x40,0x7c,0x00,0x00};
//   byte m[8]={0x00,0x44,0x6c,0x54,0x44,0x44,0x00,0x00};
//   byte n[8]={0x00,0x44,0x64,0x54,0x4c,0x44,0x00,0x00};
//   byte o[8]={0x00,0x38,0x44,0x44,0x44,0x38,0x00,0x00};
//   byte p[8]={0x00,0x78,0x44,0x78,0x40,0x40,0x00,0x00};
//   byte q[8]={0x00,0x7c,0x44,0x44,0x7c,0x10,0x00,0x00};
//   byte r[8]={0x00,0x78,0x44,0x78,0x44,0x44,0x00,0x00};
//   byte s[8]={0x00,0x7c,0x40,0x7c,0x04,0x7c,0x00,0x00};
//   byte t[8]={0x00,0x7c,0x10,0x10,0x10,0x10,0x00,0x00};
//   byte u[8]={0x00,0x44,0x44,0x44,0x44,0x7c,0x00,0x00};
//   byte v[8]={0x00,0x44,0x44,0x28,0x28,0x10,0x00,0x00};
//   byte w[8]={0x00,0x44,0x44,0x54,0x54,0x28,0x00,0x00};
//   byte x[8]={0x00,0x44,0x28,0x10,0x28,0x44,0x00,0x00};
//   byte y[8]={0x00,0x44,0x44,0x28,0x10,0x10,0x00,0x00};
//   byte z[8]={0x00,0x7c,0x08,0x10,0x20,0x7c,0x00,0x00};
  
//   byte ze[8]={0x00,0x7c,0x4c,0x54,0x64,0x7c,0x00,0x00};
//   byte on[8]={0x00,0x10,0x30,0x10,0x10,0x38,0x00,0x00};
//   byte tw[8]={0x00,0x78,0x04,0x38,0x40,0x7c,0x00,0x00};
//   byte th[8]={0x00,0x7c,0x04,0x38,0x04,0x7c,0x00,0x00};
//   byte fo[8]={0x00,0x40,0x40,0x50,0x7c,0x10,0x00,0x00};
//   byte fi[8]={0x00,0x7c,0x40,0x78,0x04,0x78,0x00,0x00};
//   byte si[8]={0x00,0x7c,0x40,0x7c,0x44,0x7c,0x00,0x00};
//   byte se[8]={0x00,0x7c,0x04,0x08,0x10,0x10,0x00,0x00};
//   byte ei[8]={0x00,0x7c,0x44,0x7c,0x44,0x7c,0x00,0x00};
//   byte ni[8]={0x00,0x7c,0x44,0x7c,0x04,0x7c,0x00,0x00};


//   byte a[5]={0x7c,0x44,0x44,0x7c,0x44};
//   byte b[5]={0x7c,0x44,0x78,0x44,0x7c};
//   byte c[5]={0x7c,0x40,0x40,0x40,0x7c};
//   byte d[5]={0x78,0x44,0x44,0x44,0x78};
//   byte e[5]={0x7c,0x40,0x78,0x40,0x7c};
//   byte f[5]={0x7c,0x40,0x70,0x40,0x40};
//   byte g[5]={0x7c,0x40,0x4c,0x44,0x7c};
//   byte h[5]={0x44,0x44,0x7c,0x44,0x44};
//   byte i[5]={0x7c,0x10,0x10,0x10,0x7c};
//   byte j[5]={0x0c,0x04,0x04,0x44,0x7c};
//   byte k[5]={0x44,0x48,0x70,0x48,0x44};
//   byte l[5]={0x40,0x40,0x40,0x40,0x7c};
//   byte m[5]={0x44,0x6c,0x54,0x44,0x44};
//   byte n[5]={0x44,0x64,0x54,0x4c,0x44};
//   byte o[5]={0x38,0x44,0x44,0x44,0x38};
//   byte p[5]={0x78,0x44,0x78,0x40,0x40};
//   byte q[5]={0x7c,0x44,0x44,0x7c,0x10};
//   byte r[5]={0x78,0x44,0x78,0x44,0x44};
//   byte s[5]={0x7c,0x40,0x7c,0x04,0x7c};
//   byte t[5]={0x7c,0x10,0x10,0x10,0x10};
//   byte u[5]={0x44,0x44,0x44,0x44,0x7c};
//   byte v[5]={0x44,0x44,0x28,0x28,0x10};
//   byte w[5]={0x44,0x44,0x54,0x54,0x28};
//   byte x[5]={0x44,0x28,0x10,0x28,0x44};
//   byte y[5]={0x44,0x44,0x28,0x10,0x10};
//   byte z[5]={0x7c,0x08,0x10,0x20,0x7c};
  
//   byte ze[5]={0x7c,0x4c,0x54,0x64,0x7c};
//   byte on[5]={0x10,0x30,0x10,0x10,0x38};
//   byte tw[5]={0x78,0x04,0x38,0x40,0x7c};
//   byte th[5]={0x7c,0x04,0x38,0x04,0x7c};
//   byte fo[5]={0x40,0x40,0x50,0x7c,0x10};
//   byte fi[5]={0x7c,0x40,0x78,0x04,0x78};
//   byte si[5]={0x7c,0x40,0x7c,0x44,0x7c};
//   byte se[5]={0x7c,0x04,0x08,0x10,0x10};
//   byte ei[5]={0x7c,0x44,0x7c,0x44,0x7c};
//   byte ni[5]={0x7c,0x44,0x7c,0x04,0x7c};
